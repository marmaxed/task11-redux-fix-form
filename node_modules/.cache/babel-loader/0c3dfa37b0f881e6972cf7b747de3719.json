{"ast":null,"code":"var _jsxFileName = \"/home/corvus/task11-redux-fix-form/src/Skills.js\";\nimport React, { Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeSearchField } from './actions/actionCreators';\nexport default function Skills() {\n  const _useSelector = useSelector(state => state.skills),\n        items = _useSelector.items,\n        loading = _useSelector.loading,\n        error = _useSelector.error,\n        search = _useSelector.search;\n\n  const dispatch = useDispatch();\n\n  const handleSearch = evt => {\n    const value = evt.target.value;\n    dispatch(changeSearchField(value));\n  };\n\n  const hasQuery = search.trim() !== '';\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"search\",\n    value: search,\n    onChange: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), !hasQuery && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Type something to search\"), hasQuery && loading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"searching...\"), hasQuery && !loading && !error && (items.length > 0 ? React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, items.map(o => React.createElement(\"li\", {\n    key: o.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, o.name))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"No results found.\")));\n}","map":{"version":3,"sources":["/home/corvus/task11-redux-fix-form/src/Skills.js"],"names":["React","Fragment","useSelector","useDispatch","changeSearchField","Skills","state","skills","items","loading","error","search","dispatch","handleSearch","evt","value","target","hasQuery","trim","length","map","o","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA,uBACaH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,MAAhB,CADxB;AAAA,QACrBC,KADqB,gBACrBA,KADqB;AAAA,QACdC,OADc,gBACdA,OADc;AAAA,QACLC,KADK,gBACLA,KADK;AAAA,QACEC,MADF,gBACEA,MADF;;AAE7B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,YAAY,GAAGC,GAAG,IAAI;AAAA,UAChBC,KADgB,GACND,GAAG,CAACE,MADE,CAChBD,KADgB;AAExBH,IAAAA,QAAQ,CAACR,iBAAiB,CAACW,KAAD,CAAlB,CAAR;AACH,GAHD;;AAKA,QAAME,QAAQ,GAAGN,MAAM,CAACO,IAAP,OAAkB,EAAnC;AACA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEP,MAA5B;AAAoC,IAAA,QAAQ,EAAEE,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADJ,EAEK,CAACI,QAAD,IAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFlB,EAGKA,QAAQ,IAAIR,OAAZ,IAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAH5B,EAIKQ,QAAQ,IAAI,CAACR,OAAb,IAAwB,CAACC,KAAzB,KACDF,KAAK,CAACW,MAAN,GAAe,CAAf,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KAAK,CAACY,GAAN,CAAUC,CAAC,IAAI;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBD,CAAC,CAACE,IAAlB,CAAf,CADL,CADA,GAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANC,CAJL,CADJ;AAgBH","sourcesContent":["import React, { Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeSearchField } from './actions/actionCreators';\n\nexport default function Skills() {\n    const { items, loading, error, search } = useSelector(state => state.skills);\n    const dispatch = useDispatch();\n\n    const handleSearch = evt => {\n        const { value } = evt.target;\n        dispatch(changeSearchField(value));\n    };\n\n    const hasQuery = search.trim() !== '';\n    return (\n        <Fragment>\n            <div><input type=\"search\" value={search} onChange={handleSearch} /></div>\n            {!hasQuery && <div>Type something to search</div>}\n            {hasQuery && loading && <div>searching...</div>}\n            {hasQuery && !loading && !error && (\n            items.length > 0 ? (\n            <ul>\n                {items.map(o => <li key={o.id}>{o.name}</li>)}\n            </ul>\n            ) : (\n            <div>No results found.</div>\n            )\n        )}\n        </Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}